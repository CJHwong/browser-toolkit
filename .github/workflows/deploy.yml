name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Detect and build tools
        run: |
          echo "🔍 Scanning for tools to build..."
          mkdir -p _site

          # Copy root files
          cp index.html _site/ 2>/dev/null || echo "No root index.html found"
          cp README.md _site/ 2>/dev/null || echo "No README.md found"
          cp CNAME _site/ 2>/dev/null || echo "No CNAME found"

          # Find all directories that could be tools (exclude hidden dirs and _site)
          for tool_dir in */; do
            tool_name=${tool_dir%/}
            
            # Skip hidden directories, _site, and .github
            if [[ "$tool_name" == .* ]] || [[ "$tool_name" == "_site" ]] || [[ "$tool_name" == ".github" ]]; then
              continue
            fi
            
            echo "📦 Processing tool: $tool_name"
            
            # Check if it's a Node.js project
            if [ -f "$tool_dir/package.json" ]; then
              echo "  └── Node.js project detected"
              
              cd "$tool_dir"
              
              # Install dependencies
              if [ -f "package-lock.json" ]; then
                echo "  └── Installing dependencies with npm ci"
                npm ci
              elif [ -f "yarn.lock" ]; then
                echo "  └── Installing dependencies with yarn"
                yarn install --frozen-lockfile
              else
                echo "  └── Installing dependencies with npm install"
                npm install
              fi
              
              # Check for common build commands
              if npm run build --if-present; then
                echo "  └── Build completed successfully"
                
                # Copy build output to deployment directory
                mkdir -p "../_site/$tool_name"
                
                # Common build output directories
                if [ -d "build" ]; then
                  cp -r build/* "../_site/$tool_name/"
                elif [ -d "dist" ]; then
                  cp -r dist/* "../_site/$tool_name/"
                elif [ -d "out" ]; then
                  cp -r out/* "../_site/$tool_name/"
                elif [ -d "public" ]; then
                  cp -r public/* "../_site/$tool_name/"
                else
                  echo "  ⚠️  No recognized build output directory found"
                  # Fallback: copy common web files
                  cp *.html "../_site/$tool_name/" 2>/dev/null || true
                  cp -r assets/ "../_site/$tool_name/" 2>/dev/null || true
                  cp -r css/ "../_site/$tool_name/" 2>/dev/null || true
                  cp -r js/ "../_site/$tool_name/" 2>/dev/null || true
                fi
              else
                echo "  ⚠️  No build command found or build failed"
              fi
              
              cd ..
              
            # Check if it's a static tool (has index.html)
            elif [ -f "$tool_dir/index.html" ]; then
              echo "  └── Static tool detected"
              mkdir -p "_site/$tool_name"
              cp -r "$tool_dir"* "_site/$tool_name/"
              
            else
              echo "  ⚠️  Unknown tool type - skipping"
            fi
          done

          echo "✅ Build process completed"
          echo "📂 Deployment contents:"
          find _site -type f | head -20

      - name: Setup Pages
        if: github.ref == 'refs/heads/main'
        uses: actions/configure-pages@v4

      - name: Upload artifact
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site

      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main'
        id: deployment
        uses: actions/deploy-pages@v4
